plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-spring-boot-application' version '6.0.0'
}

group = 'com.calibre.forex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework:spring-web'
	implementation 'com.fasterxml.jackson.core:jackson-core:latest.release'
	implementation 'com.fasterxml.jackson.core:jackson-databind:latest.release'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:latest.release'
	implementation 'net.sf.ehcache:ehcache:2.10.6'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

